name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'
  workflow_dispatch:

permissions:
  security-events: write
  contents: read
  actions: read

jobs:
  tfsec:
    name: TFSec Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: true
          format: sarif
          output: tfsec-results.sarif

      - name: Upload SARIF Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: tfsec-results.sarif

  checkov:
    name: Checkov Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          output_format: sarif
          output_file_path: checkov-results.sarif
          quiet: true
          soft_fail: true

      - name: Upload Checkov Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov-results.sarif

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: GitLeaks Scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [tfsec, checkov, secrets-scan]
    if: always()

    steps:
      - name: Quality Gate Check
        run: |
          echo "Security Scan Results:"
          echo "TFSec: ${{ needs.tfsec.result }}"
          echo "Checkov: ${{ needs.checkov.result }}"
          echo "Secrets: ${{ needs.secrets-scan.result }}"
          
          if [[ "${{ needs.tfsec.result }}" == "failure" ]]; then
            echo "TFSec found security issues"
            exit 1
          fi
          
          if [[ "${{ needs.secrets-scan.result }}" == "failure" ]]; then
            echo "Secrets detected in repository"
            exit 1
          fi
          
          echo "All security checks passed"