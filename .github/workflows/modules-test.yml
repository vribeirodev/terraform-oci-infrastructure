name: Module Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  TF_VERSION: "1.6.6"

jobs:
  module-structure:
    name: Module Structure Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Test Module Structure
        run: |
          echo "Testing module structure compliance..."
          
          echo "Testing networking module..."
          [ -f "modules/networking/main.tf" ] || { echo "Missing main.tf"; exit 1; }
          [ -f "modules/networking/variables.tf" ] || { echo "Missing variables.tf"; exit 1; }
          [ -f "modules/networking/outputs.tf" ] || { echo "Missing outputs.tf"; exit 1; }
          [ -f "modules/networking/README.md" ] || { echo "Missing README.md"; exit 1; }
          
          echo "Testing compute module..."
          [ -f "modules/compute/main.tf" ] || { echo "Missing main.tf"; exit 1; }
          [ -f "modules/compute/variables.tf" ] || { echo "Missing variables.tf"; exit 1; }
          [ -f "modules/compute/outputs.tf" ] || { echo "Missing outputs.tf"; exit 1; }
          [ -f "modules/compute/README.md" ] || { echo "Missing README.md"; exit 1; }
          
          echo "All modules have required structure"

  terraform-syntax:
    name: Terraform Syntax Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        module: [networking, compute]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Test Module
        run: |
          cd modules/${{ matrix.module }}
          
          echo "Testing module: ${{ matrix.module }}"
          terraform fmt -check
          terraform init -backend=false
          terraform validate
          
          echo "Module ${{ matrix.module }} passed all syntax tests"

  example-validation:
    name: Example Validation
    runs-on: ubuntu-latest

    strategy:
      matrix:
        example: [basic-infrastructure, web-application]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Test Example
        run: |
          cd examples/${{ matrix.example }}
          
          echo "Testing example: ${{ matrix.example }}"
          
          [ -f "main.tf" ] || { echo "Missing main.tf"; exit 1; }
          [ -f "variables.tf" ] || { echo "Missing variables.tf"; exit 1; }
          [ -f "outputs.tf" ] || { echo "Missing outputs.tf"; exit 1; }
          [ -f "terraform.tfvars.example" ] || { echo "Missing terraform.tfvars.example"; exit 1; }
          [ -f "README.md" ] || { echo "Missing README.md"; exit 1; }
          
          terraform fmt -check
          terraform init -backend=false
          terraform validate
          
          echo "Example ${{ matrix.example }} passed validation"

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [module-structure, terraform-syntax, example-validation]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Test Module Integration
        run: |
          echo "Testing module integration..."
          
          cd examples/basic-infrastructure
          terraform init -backend=false
          
          cat > test.tfvars << EOF
          compartment_id = "ocid1.compartment.oc1..test"
          ssh_public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDTest test@example.com"
          EOF
          
          terraform plan -var-file=test.tfvars -out=test.tfplan || {
            echo "Basic infrastructure plan failed"
            exit 1
          }
          
          echo "Basic infrastructure integration test passed"
